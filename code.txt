// #include<bits/stdc++.h>
// using namespace std;
// #define ll long long int
// //ll ans[105];

// // int countBits(int n){
// //     int count=0;
// //     while(n>0){
// //         count += (n&1);
// //         n==n>>1;
// //     }
// //     return count;
// // }

// // int countfast(int n){
// //     int k=0;
// //     while(n){
// //         k++;
// //         n=n & (n-1);
// //     }
// //     return k;
// // }

// //Extract ith bits of a number.
//  int getithBit(int n,int i){
//     return (n & (1<<i))!=0?1:0;
//  }
// //change the ith bit to 1
//  void setitbit(int n,int i){
//     int mask=1<<i;
//     n=(n|mask);
//  } 
// //Clear the i th bit
//  void clearBit(int n,int i){
//     int mask=~(1<<i);
//     n=n&mask;
//  }
//  //subsequence of a string
 

// int main()
// {
//     //**************************
//     #ifndef ONLINE_JUDGE
//     freopen("input.txt","r",stdin);
//     freopen("output.txt","w",stdout);
//     #endif
    
//     ios_base::sync_with_stdio(false);
//     cin.tie(NULL);
//     //***************************
//     //int a,b;
//     //cin>>a>>b;
    
//     //sappose a and b .min no bits that i need to change a t0 b;
//     //cout<<(a ^ b);
//     //calculate no of set bit in a number;
//     int n;
//     cin>>n;
//     cout<<countfast(n)<<endl;
//     //cout<<countfast(n)<<endl;

// }
// //pair

// // pair <int ,int>p_array[3];
//     // p_array[0]={1,2};
//     // p_array[1]={2,3};
//     // p_array[2]={4,5};
//     // for(int i=0;i<3;i++){
//     //     cout<<p_array[i].first<<" "<<p_array[i].second<<endl;
// // }

// int countdigit(int x){
//     return floor(log10(x)+1);

// }

// int reverse_num(int num){
//     int r_num=0;
//     int rem=0;
//     while(num!=0){
//         rem=num%10;
//         r_num=r_num*10+rem;
//         num/=10;
//     }
//     return r_num;
// }

// int fact(int n){
//     if(n==0) return 1;
//     return n*fact(n-1);
// }

// vector<int> quadratic(int a,int b,int c){
//     vector<int>v;
//     int d=((b*b)-4*a*c);
//     if(d<0){
//         v.push_back(-1);
//         return v;
//     }
//     else{
//         v.push_back((-1*b-sqrt(d))/(2*a));
//         v.push_back((-1*b+sqrt(d))/(2*a));
//         sort(v.begin(),v.end(),greater<int>());
//         return v;
//     }
// }

// int gcd(int a,int b){
//     if(b==0) return a;
//     return gcd(b,a%b);
// }

// double termofGP(int a,int b,int n){
//     double r=(float)b/a;
//     return (a*pow(r,n-1));
// }

// void setof(int a,int k){
//     if((a>>(k-1))&1){
//         cout<<"Yes";
//     }
//     else cout<<"No"<<endl;
// }




// Note that this problem is for testing fast input-output.
// We can use scanf, printf in C langauge, which are quite fast in general :)
#include <bits/stdc++.h> 

using namespace std;

// Usually, you can use scanf/printf in C++.
// However, if you want to use cin/cout, it is usually slow.
// To make it faster. Use cin.tie(NULL) and set ios_base::sync_with_stdio(false)
// See the below code for details.

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	// Read the input n, k
	int n, k;
	cin >> n >> k;

	// ans denotes number of integers n divisible by k
	int ans = 0;

	for (int i = 0; i < n; i++) {
		int t;
		cin >> t;
		
		if (t % k == 0) {
			ans++;
		}		
	}

	// Print the ans.
	cout << ans << "\n";	
		
	return 0;
}